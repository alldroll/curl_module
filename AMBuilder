# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os.path

binary = AMXX.MetaModule(builder, 'curl')

if not hasattr(AMXX, 'curl_path'):
  AMXX.curl_path = builder.currentSourcePath + '/curl_src'

binary.compiler.cxxincludes += [
  os.path.join(AMXX.curl_path, 'include'),
  os.path.join(builder.currentSourcePath, 'lib'),
  os.path.join(builder.currentSourcePath, 'thread'),
]

binary.compiler.defines += [
  'SM_DEFAULT_THREADER',
  'HAVE_STDINT_H'
]

if builder.target_platform is 'linux' or builder.target_platform is 'mac':
  binary.compiler.linkflags += [
    os.path.join(AMXX.curl_path, 'lib', 'libcurl.a'),
    '-lpthread',
    '-lm'
  ]
else:
  binary.compiler.defines += [
    'CURL_STATICLIB',
    'snprintf=_snprintf'
  ]
  binary.compiler.linkflags += [
    os.path.join(AMXX.curl_path, 'lib', 'libcurl_a.lib'),
    '/NODEFAULTLIB:libcmt' #i do something wrong
  ]

binary.compiler.linkflags += [AMXX.zlib.binary]
         
binary.sources = [
  'base_curl.cpp',
  'thread_curl.cpp',
  'handles.cpp',
  'module.cpp',
  'lib/curl_wrap.cpp',
  '../../public/sdk/amxxmodule.cpp',
  'thread/BaseWorker.cpp',
  'thread/ThreadWorker.cpp',
]

if builder.target_platform == 'windows':
  binary.sources += [
    'thread/WinThreads.cpp',
  ]
else:
  binary.sources += [
    'thread/PosixThreads.cpp',
  ]

AMXX.modules += [builder.Add(binary)]